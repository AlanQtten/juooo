{"ast":null,"code":"var _jsxFileName = \"E:\\\\sh_0610\\\\react-native-expo\\\\expo-demo\\\\App.js\";\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect, Provider } from \"react-redux\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        count: state.count + 1\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(reducer);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n};\n\nvar mapDispatchToProps = {\n  increase: function increase() {\n    return {\n      type: \"INCREASE\"\n    };\n  }\n};\n\nfunction Count(props) {\n  var count = props.count;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Count:\", count), React.createElement(Button, {\n    title: \"count++\",\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(CountContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar CountContainer = connect(mapStateToProps, mapDispatchToProps)(Count);\nexport default App;","map":{"version":3,"sources":["E:/sh_0610/react-native-expo/expo-demo/App.js"],"names":["React","createStore","connect","Provider","reducer","state","count","action","console","log","type","store","mapStateToProps","mapDispatchToProps","increase","Count","props","App","CountContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAyB;AAAA,MAAXC,MAAW;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AACLJ,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADhB,OAAP;AAIA;;AACF;AACE,aAAOD,KAAP;AARJ;AAUD,CAZD;;AAaA,IAAMM,KAAK,GAAGV,WAAW,CAACG,OAAD,CAAzB;;AACA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAOA,IAAMO,kBAAkB,GAAG;AACzBC,EAAAA,QADyB,sBACd;AACT,WAAO;AACLJ,MAAAA,IAAI,EAAE;AADD,KAAP;AAGD;AALwB,CAA3B;;AAQA,SAASK,KAAT,CAAeC,KAAf,EAAsB;AAAA,MACZV,KADY,GACFU,KADE,CACZV,KADY;AAEpB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaA,KAAb,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,mBAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AACD,SAASW,GAAT,GAAe;AACb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,IAAMO,cAAc,GAAGhB,OAAO,CAACU,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CE,KAA7C,CAAvB;AAEA,eAAeE,GAAf","sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\";\nimport { View, Text, Button } from \"react-native\";\nimport { connect, Provider } from \"react-redux\";\nconst reducer = (state = { count: 0 }, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        count: state.count + 1,\n      };\n\n      break;\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer);\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n  };\n};\n\n// 要有动作，动作是函数，动作和视图是无法建立联系的\nconst mapDispatchToProps = {\n  increase() {\n    return {\n      type: \"INCREASE\",\n    };\n  },\n};\n\nfunction Count(props) {\n  const { count } = props;\n  return (\n    <View>\n      <Text>Count:{count}</Text>\n      <Button title=\"count++\" onPress={() => {}} />\n    </View>\n  );\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <CountContainer />\n    </Provider>\n  );\n}\n\nconst CountContainer = connect(mapStateToProps, mapDispatchToProps)(Count);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}