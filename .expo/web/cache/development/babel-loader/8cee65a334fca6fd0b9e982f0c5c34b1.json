{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  update: 0\n};\n\nvar update = function update() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREASE\":\n      console.log(\"update increase\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        update: state.update + 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default update;","map":{"version":3,"sources":["E:/sh_0610/react-native-expo/expo-demo/reducers/update.js"],"names":["initialState","update","state","action","type","console","log"],"mappings":";;;;;;AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAAnB;;AAIA,IAAMA,MAAM,GAAG,SAATA,MAAS,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,6CAAYJ,KAAZ;AAAmBD,QAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,GAAe;AAA1C;;AACF;AACE,aAAOC,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,MAAf","sourcesContent":["var initialState = {\r\n  update: 0,\r\n};\r\n\r\nconst update = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREASE\":\r\n      console.log(\"update increase\");\r\n\r\n      return { ...state, update: state.update + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default update;\r\n"]},"metadata":{},"sourceType":"module"}