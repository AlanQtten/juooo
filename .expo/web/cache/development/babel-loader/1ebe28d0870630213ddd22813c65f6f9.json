{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\sh_0610\\\\react-native-expo\\\\expo-demo\\\\App.js\";\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Provider, connect } from \"react-redux\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  return state;\n};\n\nvar store = createStore(reducer);\n\nvar Count = function Count(props) {\n  var count = props.count;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"count:\", count));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n};\n\nvar CountContainer = connect(mapStateToProps)(Count);\n\nvar App = function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(CountContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["E:/sh_0610/react-native-expo/expo-demo/App.js"],"names":["React","createStore","Provider","connect","reducer","state","count","store","Count","props","mapStateToProps","CountContainer","App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA0B;AAAA,MAAzBC,KAAyB,uEAAjB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAiB;AACxC,SAAOD,KAAP;AACD,CAFD;;AAGA,IAAME,KAAK,GAAGN,WAAW,CAACG,OAAD,CAAzB;;AACA,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfH,KADe,GACLG,KADK,CACfH,KADe;AAEvB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaA,KAAb,CADF,CADF;AAKD,CAPD;;AAQA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAKA,IAAMK,cAAc,GAAGR,OAAO,CAACO,eAAD,CAAP,CAAyBF,KAAzB,CAAvB;;AACA,IAAMI,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAOA,eAAeK,GAAf","sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\";\nimport { View, Text, Button } from \"react-native\";\nimport { Provider, connect } from \"react-redux\";\n/*\n  1.需要有一个视图组件以便显示相应的数据\n  2.可以创建一个store仓库给视图组件提供数据支持\n  3.store仓库本身没有数据，所以需要有reducer给它设置数据\n  4.reducer可以初始state状态值，但是需要将它与store进行整合\n*/\nconst reducer = (state = { count: 0 }) => {\n  return state;\n};\nconst store = createStore(reducer);\nconst Count = (props) => {\n  const { count } = props;\n  return (\n    <View>\n      <Text>count:{count}</Text>\n    </View>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n  };\n};\nconst CountContainer = connect(mapStateToProps)(Count);\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CountContainer />\n    </Provider>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}