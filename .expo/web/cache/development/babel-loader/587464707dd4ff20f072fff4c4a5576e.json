{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\sh_0610\\\\react-native-expo\\\\expo-demo\\\\App.js\";\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Provider, connect } from \"react-redux\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(reducer);\n\nvar Count = function Count(props) {\n  var count = props.count,\n      increase = props.increase;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"count:\", count), React.createElement(Button, {\n    title: \"count++\",\n    onPress: increase,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n};\n\nvar mapDispatchToProps = {\n  increase: function increase() {\n    return {\n      type: \"INCREASE\"\n    };\n  }\n};\nvar CountContainer = connect(mapStateToProps, mapDispatchToProps)(Count);\n\nvar App = function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(CountContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["E:/sh_0610/react-native-expo/expo-demo/App.js"],"names":["React","createStore","Provider","connect","reducer","state","count","action","type","store","Count","props","increase","mapStateToProps","mapDispatchToProps","CountContainer","App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;;AAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAyB;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADhB,OAAP;;AAGF;AACE,aAAOD,KAAP;AANJ;AAQD,CATD;;AAUA,IAAMI,KAAK,GAAGR,WAAW,CAACG,OAAD,CAAzB;;AACA,IAAMM,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfL,KADe,GACKK,KADL,CACfL,KADe;AAAA,MACRM,QADQ,GACKD,KADL,CACRC,QADQ;AAEvB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaN,KAAb,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEM,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CARD;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACR,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAKA,IAAMQ,kBAAkB,GAAG;AAEzBF,EAAAA,QAFyB,sBAEd;AACT,WAAO;AACLJ,MAAAA,IAAI,EAAE;AADD,KAAP;AAGD;AANwB,CAA3B;AASA,IAAMO,cAAc,GAAGZ,OAAO,CAACU,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,KAA7C,CAAvB;;AACA,IAAMM,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAOA,eAAeO,GAAf","sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\";\nimport { View, Text, Button } from \"react-native\";\nimport { Provider, connect } from \"react-redux\";\n/*\n  1.需要有一个视图组件以便显示相应的数据\n  2.可以创建一个store仓库给视图组件提供数据支持\n  3.store仓库本身没有数据，所以需要有reducer给它设置数据\n  4.reducer可以初始state状态值，但是需要将它与store进行整合\n  5.reducer的state是无法实现数据传递的，所以需要将state转成props才能进行属性传递，mapStateToProps\n  6.需要将视图组件包裹至一个容器组件中，以便视图组件能够接收到容器组件的属性值，需要利用connect将mapStateToProps与视图组件进行连接\n  7.需要有一个Provider提供store给容器组件，所以容器组件最外层被Provider所包裹\n  8.视图层有一个按钮，想要触发一个事件\n*/\nconst reducer = (state = { count: 0 }, action) => {\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        count: state.count + 1,\n      };\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer);\nconst Count = (props) => {\n  const { count, increase } = props;\n  return (\n    <View>\n      <Text>count:{count}</Text>\n      <Button title=\"count++\" onPress={increase}></Button>\n    </View>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n  };\n};\nconst mapDispatchToProps = {\n  // 派单\n  increase() {\n    return {\n      type: \"INCREASE\",\n    };\n  },\n};\n\nconst CountContainer = connect(mapStateToProps, mapDispatchToProps)(Count);\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CountContainer />\n    </Provider>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}