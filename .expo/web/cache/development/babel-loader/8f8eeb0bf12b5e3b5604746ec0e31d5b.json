{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\sh_0610\\\\react-native-expo\\\\expo-demo\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Provider, connect } from \"react-redux\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        count: state.count + 1\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(reducer);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          count = _this$props.count,\n          increase = _this$props.increase;\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, \"count:\", count, \" \", React.createElement(\"button\", {\n        onClick: increase,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 23\n        }\n      }, \"\\u8BA1\\u6570\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n};\n\nvar mapDispatchToProps = {\n  increase: function increase() {\n    return {\n      type: \"INCREASE\"\n    };\n  }\n};\nvar AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}, React.createElement(AppContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["E:/sh_0610/react-native-expo/expo-demo/App.js"],"names":["React","createStore","Provider","connect","reducer","state","count","action","type","store","App","props","increase","Component","mapStateToProps","mapDispatchToProps","AppContainer"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAyB;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADhB,OAAP;AAIA;;AACF;AACE,aAAOD,KAAP;AARJ;AAUD,CAXD;;AAaA,IAAMI,KAAK,GAAGR,WAAW,CAACG,OAAD,CAAzB;;IAEMM,G;;;;;;;;;;;;;6BACK;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCL,KADD,eACCA,KADD;AAAA,UACQM,QADR,eACQA,QADR;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSN,KADT,OACgB;AAAQ,QAAA,OAAO,EAAEM,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADhB,CADF;AAKD;;;;EAReZ,KAAK,CAACa,S;;AAWxB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACT,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMS,kBAAkB,GAAG;AACzBH,EAAAA,QADyB,sBACd;AACT,WAAO;AACLJ,MAAAA,IAAI,EAAE;AADD,KAAP;AAGD;AALwB,CAA3B;AAQA,IAAMQ,YAAY,GAAGb,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,GAA7C,CAArB;AAEA,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF","sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\";\nimport { View, Text, Button } from \"react-native\";\nimport { Provider, connect } from \"react-redux\";\n\nconst reducer = (state = { count: 0 }, action) => {\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        count: state.count + 1,\n      };\n\n      break;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nclass App extends React.Component {\n  render() {\n    const { count, increase } = this.props;\n    return (\n      <div>\n        count:{count} <button onClick={increase}>计数</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n  };\n};\n\nconst mapDispatchToProps = {\n  increase() {\n    return {\n      type: \"INCREASE\",\n    };\n  },\n};\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default (\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>\n);\n"]},"metadata":{},"sourceType":"module"}