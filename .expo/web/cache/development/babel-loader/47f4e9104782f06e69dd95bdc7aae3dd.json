{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"E:\\\\sh_0610\\\\react-native-expo\\\\expo-demo\\\\App.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar Child = function (_Component) {\n  _inherits(Child, _Component);\n\n  var _super = _createSuper(Child);\n\n  function Child(props) {\n    var _this;\n\n    _classCallCheck(this, Child);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      title: \"子组件\"\n    };\n    return _this;\n  }\n\n  _createClass(Child, [{\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      var title = this.state.title;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, title), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, name));\n    }\n  }]);\n\n  return Child;\n}(Component);\n\nvar App = function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var increase = function increase() {\n    setCount(count + 1);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Count:\", count), React.createElement(Button, {\n    title: \"count++\",\n    onPress: increase,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Child, {\n    name: \"\\u5C5E\\u6027\\u503C\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/sh_0610/react-native-expo/expo-demo/App.js"],"names":["StatusBar","React","Component","useState","Child","props","state","title","name","App","count","setCount","increase","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;IAaMC,K;;;;;AAKJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA,UACCC,IADD,GACU,KAAKH,KADf,CACCG,IADD;AAAA,UAECD,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,KAAP,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,IAAP,CAFF,CADF;AAMD;;;;EArBiBN,S;;AA0BpB,IAAMO,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACUN,QAAQ,CAAC,CAAD,CADlB;AAAA;AAAA,MACTO,KADS;AAAA,MACFC,QADE;;AAGhB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaJ,KAAb,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEE,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAdD;;AAgBA,eAAeH,GAAf;AAEA,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { Component, useState } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\n\n// export default function App() {\n//   return (\n//     <View style={styles.container}>\n//       <Text>你好,React Native</Text>\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// 类组件\nclass Child extends Component {\n  // state = {\n  //   title: \"子组件\",\n  // };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"子组件\",\n    };\n  }\n\n  render() {\n    const { name } = this.props;\n    const { title } = this.state;\n    return (\n      <View>\n        <Text>{title}</Text>\n        <Text>{name}</Text>\n      </View>\n    );\n  }\n}\n\n// 函数式组件，是没有state的\n// useState\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const increase = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Count:{count}</Text>\n      <Button title=\"count++\" onPress={increase}></Button>\n      <Child name=\"属性值\" />\n    </View>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}